{"version":3,"sources":["words.js","reducer.js","App.js","serviceWorker.js","index.js"],"names":["getRandomInt","max","Math","floor","random","shuffleTiles","tiles","assassinId","toDistribute","values","i","wordIndex","getUnselectedRandom","selection","val","length","contains","map","tile","id","words","tileValue","filter","push","word","value","color","reset","teamAscore","teamBscore","spy","initialState","state","action","type","flippedTile","newState","slice","concat","scoreToWin","Tile","handleClick","spyClass","className","onClick","Row","rowI","columns","key","App","useReducer","reducer","dispatch","rowsCountAndLength","sqrt","round","Error","rows","rowData","winningTeam","onMouseDown","onMouseUp","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mPAAe,GACb,OACA,OACA,WACA,YACA,WACA,QACA,YACA,cACA,UACA,QACA,SACA,WACA,YACA,cACA,gBACA,aACA,MACA,SACA,SACA,YACA,UACA,WACA,OACA,UACA,cACA,WACA,MACA,WACA,OACA,UACA,SACA,WACA,WACA,aACA,aACA,MACA,UACA,QACA,YACA,SACA,OACA,YACA,OACA,MACA,UACA,MACA,OACA,YACA,OACA,WACA,OACA,aACA,UACA,SACA,QACA,UACA,YACA,QACA,OACA,MACA,OACA,MACA,UACA,OACA,OACA,SACA,OACA,QACA,SACA,MACA,MACA,aACA,QACA,QACA,QACA,SACA,WACA,SACA,QACA,SACA,WACA,SACA,QACA,UACA,OACA,QACA,MACA,MACA,QACA,YACA,OACA,aACA,WACA,MACA,SACA,QACA,OACA,aACA,MACA,YACA,cACA,MACA,KACA,UACA,OACA,UACA,QACA,QACA,WACA,UACA,cACA,OACA,QACA,OACA,UACA,QACA,YACA,SACA,SACA,OACA,QACA,QACA,YACA,QACA,OACA,QACA,OACA,UACA,MACA,OACA,UACA,UACA,WACA,OACA,cACA,YACA,eACA,OACA,OACA,OACA,WACA,MACA,QACA,MACA,SACA,SACA,QACA,QACA,YACA,OACA,SACA,QACA,QACA,OACA,UACA,UACA,OACA,MACA,OACA,OACA,MACA,OACA,SACA,OACA,UACA,OACA,aACA,SACA,QACA,YACA,QACA,QACA,SACA,MACA,WACA,OACA,WACA,OACA,MACA,QACA,OACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,OACA,OACA,OACA,MACA,MACA,QACA,QACA,cACA,WACA,WACA,MACA,MACA,SACA,YACA,YACA,SACA,YACA,YACA,UACA,MACA,QACA,OACA,QACA,QACA,YACA,SACA,UACA,SACA,OACA,QACA,UACA,MACA,OACA,WACA,UACA,aACA,QACA,UACA,SACA,MACA,QACA,UACA,MACA,OACA,WACA,WACA,UACA,YACA,UACA,UACA,SACA,OACA,OACA,QACA,SACA,OACA,UACA,SACA,WACA,MACA,SACA,cACA,OACA,UACA,SACA,OACA,UACA,UACA,QACA,QACA,YACA,OACA,QACA,SACA,MACA,UACA,OACA,OACA,SACA,cACA,OACA,QACA,MACA,QACA,WACA,QACA,QACA,aACA,MACA,OACA,OACA,SACA,WACA,OACA,YACA,QACA,OACA,MACA,QACA,YACA,MACA,aACA,SACA,SACA,OACA,MACA,MACA,UACA,MACA,cACA,SACA,WACA,aACA,SACA,QACA,MACA,OACA,QACA,QACA,MACA,MACA,MACA,UACA,OACA,MACA,SACA,WACA,OACA,UACA,OACA,OACA,QACA,QACA,SACA,QACA,OACA,SACA,UACA,MACA,WACA,MACA,QACA,UACA,MACA,OACA,YACA,OACA,MACA,SACA,QACA,YACA,WACA,QACA,aACA,OACA,OACA,SACA,MACA,WACA,WACA,WACA,UACA,QACA,WACA,SACA,UACA,QACA,UACA,UACA,OACA,SACA,OACA,aACA,OACA,WACA,OACA,YACA,OACA,UACA,SACA,OACA,MACA,SACA,QACA,UACA,UACA,QACA,OACA,MACA,OACA,aACA,WACA,QACA,QACA,MACA,QACA,OACA,SACA,YACA,WACA,OACA,UACA,QACA,QACA,YACA,OACA,MACA,cACA,SACA,MACA,MACA,WACA,SACA,SACA,QACA,QACA,WACA,QACA,UACA,UACA,WACA,OACA,QACA,UACA,SACA,QACA,QACA,QACA,OACA,SACA,QACA,WACA,SACA,OACA,OACA,MACA,SACA,WACA,QACA,QACA,SACA,WACA,cACA,QACA,aACA,QACA,SACA,SACA,SACA,QACA,QACA,OACA,WACA,SACA,QACA,OACA,QACA,QACA,WACA,aACA,OACA,UACA,SACA,OACA,QACA,OACA,OACA,OACA,OACA,WACA,aACA,YACA,WACA,OACA,WACA,gBACA,aACA,eACA,YACA,OACA,SACA,QACA,OACA,SACA,aACA,QACA,YACA,QACA,OACA,QACA,OACA,MACA,UACA,YACA,SACA,MACA,UACA,MACA,SACA,gBACA,YACA,MACA,SACA,MACA,OACA,SACA,OACA,OACA,QACA,aACA,OACA,OACA,MACA,MACA,OACA,SACA,OACA,UACA,aACA,WACA,OACA,YACA,OACA,SACA,SACA,YACA,WACA,QACA,WACA,SACA,WACA,UACA,MACA,QACA,UACA,UACA,QACA,QACA,SACA,UACA,YACA,QACA,WACA,QACA,SACA,SACA,OACA,SACA,aACA,SACA,MACA,QACA,UACA,MACA,OACA,QACA,QACA,OACA,QACA,QACA,SACA,OACA,UACA,OACA,QACA,QACA,WACA,SACA,OACA,SACA,QACA,QACA,SACA,YACA,MACA,SACA,SACA,SACA,WACA,OACA,QACA,QACA,cACA,YACA,QACA,QACA,WACA,QACA,SACA,aACA,SACA,UACA,MACA,UACA,QACA,QACA,QACA,UACA,WACA,QACA,aACA,OACA,OACA,UACA,SACA,WACA,YACA,MACA,SACA,QACA,QACA,SACA,UACA,UACA,OACA,QACA,OACA,UACA,SACA,SACA,QACA,SACA,QACA,SACA,OACA,aACA,UACA,aACA,UACA,QACA,QACA,WACA,OACA,WACA,OACA,QACA,MACA,OACA,QACA,aACA,QACA,OACA,eACA,OACA,aACA,UACA,OACA,SACA,MACA,QACA,aACA,MACA,UACA,OACA,SACA,WACA,aACA,WACA,QACA,UACA,QACA,MACA,OACA,WACA,SACA,OACA,OACA,OACA,QACA,OACA,aACA,YACA,UACA,MACA,OACA,SACA,OACA,OCxpBIA,EAAe,SAACC,GAAD,OAASC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMF,KAmB9DI,EAAe,WASnB,IARA,IAAMC,EAAQ,GACRC,EAAaP,EAAa,IAC1BQ,EAAe,CACnBC,OAAQ,CAAC,QAAS,QAAS,WAC3B,MAAS,EACT,MAAS,EACT,QAAW,GAPY,WAShBC,GACP,IAAMC,EAlBkB,SAAtBC,EAAuBC,EAAWZ,GACtC,IAAMS,EAAIV,EAAaC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","file":"static/js/main.50041a4b.chunk.js","sourcesContent":["export default [\n  'Acne',\n  'Acre',\n  'Addendum',\n  'Advertise',\n  'Aircraft',\n  'Aisle',\n  'Alligator',\n  'Alphabetize',\n  'America',\n  'Ankle',\n  'Apathy',\n  'Applause',\n  'Applesauc',\n  'Application',\n  'Archaeologist',\n  'Aristocrat',\n  'Arm',\n  'Armada',\n  'Asleep',\n  'Astronaut',\n  'Athlete',\n  'Atlantis',\n  'Aunt',\n  'Avocado',\n  'Baby-Sitter',\n  'Backbone',\n  'Bag',\n  'Baguette',\n  'Bald',\n  'Balloon',\n  'Banana',\n  'Banister',\n  'Baseball',\n  'Baseboards',\n  'Basketball',\n  'Bat',\n  'Battery',\n  'Beach',\n  'Beanstalk',\n  'Bedbug',\n  'Beer',\n  'Beethoven',\n  'Belt',\n  'Bib',\n  'Bicycle',\n  'Big',\n  'Bike',\n  'Billboard',\n  'Bird',\n  'Birthday',\n  'Bite',\n  'Blacksmith',\n  'Blanket',\n  'Bleach',\n  'Blimp',\n  'Blossom',\n  'Blueprint',\n  'Blunt',\n  'Blur',\n  'Boa',\n  'Boat',\n  'Bob',\n  'Bobsled',\n  'Body',\n  'Bomb',\n  'Bonnet',\n  'Book',\n  'Booth',\n  'Bowtie',\n  'Box',\n  'Boy',\n  'Brainstorm',\n  'Brand',\n  'Brave',\n  'Bride',\n  'Bridge',\n  'Broccoli',\n  'Broken',\n  'Broom',\n  'Bruise',\n  'Brunette',\n  'Bubble',\n  'Buddy',\n  'Buffalo',\n  'Bulb',\n  'Bunny',\n  'Bus',\n  'Buy',\n  'Cabin',\n  'Cafeteria',\n  'Cake',\n  'Calculator',\n  'Campsite',\n  'Can',\n  'Candle',\n  'Candy',\n  'Cape',\n  'Capitalism',\n  'Car',\n  'Cardboard',\n  'Cartography',\n  'Cat',\n  'Cd',\n  'Ceiling',\n  'Cell',\n  'Century',\n  'Chair',\n  'Chalk',\n  'Champion',\n  'Charger',\n  'Cheerleader',\n  'Chef',\n  'Chess',\n  'Chew',\n  'Chicken',\n  'Chime',\n  'Chocolate',\n  'Church',\n  'Circus',\n  'Clay',\n  'Cliff',\n  'Cloak',\n  'Clockwork',\n  'Clown',\n  'Clue',\n  'Coach',\n  'Coal',\n  'Coaster',\n  'Cog',\n  'Cold',\n  'College',\n  'Comfort',\n  'Computer',\n  'Cone',\n  'Constrictor',\n  'Continuum',\n  'Conversation',\n  'Cook',\n  'Coop',\n  'Cord',\n  'Corduroy',\n  'Cot',\n  'Cough',\n  'Cow',\n  'Cowboy',\n  'Crayon',\n  'Cream',\n  'Crisp',\n  'Criticize',\n  'Crow',\n  'Cruise',\n  'Crumb',\n  'Crust',\n  'Cuff',\n  'Curtain',\n  'Cuticle',\n  'Czar',\n  'Dad',\n  'Dart',\n  'Dawn',\n  'Day',\n  'Deep',\n  'Defect',\n  'Dent',\n  'Dentist',\n  'Desk',\n  'Dictionary',\n  'Dimple',\n  'Dirty',\n  'Dismantle',\n  'Ditch',\n  'Diver',\n  'Doctor',\n  'Dog',\n  'Doghouse',\n  'Doll',\n  'Dominoes',\n  'Door',\n  'Dot',\n  'Drain',\n  'Draw',\n  'Dream',\n  'Dress',\n  'Drink',\n  'Drip',\n  'Drums',\n  'Dryer',\n  'Duck',\n  'Dump',\n  'Dunk',\n  'Dust',\n  'Ear',\n  'Eat',\n  'Ebony',\n  'Elbow',\n  'Electricity',\n  'Elephant',\n  'Elevator',\n  'Elf',\n  'Elm',\n  'Engine',\n  'Ergonomic',\n  'Escalator',\n  'Eureka',\n  'Evolution',\n  'Extension',\n  'Eyebrow',\n  'Fan',\n  'Fancy',\n  'Fast',\n  'Feast',\n  'Fence',\n  'Feudalism',\n  'Fiddle',\n  'Figment',\n  'Finger',\n  'Fire',\n  'First',\n  'Fishing',\n  'Fix',\n  'Fizz',\n  'Flagpole',\n  'Flannel',\n  'Flashlight',\n  'Flock',\n  'Flotsam',\n  'Flower',\n  'Flu',\n  'Flush',\n  'Flutter',\n  'Fog',\n  'Foil',\n  'Football',\n  'Forehead',\n  'Forever',\n  'Fortnight',\n  'Freckle',\n  'Freight',\n  'Fringe',\n  'Frog',\n  'Frog',\n  'Frown',\n  'Gallop',\n  'Game',\n  'Garbage',\n  'Garden',\n  'Gasoline',\n  'Gem',\n  'Ginger',\n  'Gingerbread',\n  'Girl',\n  'Glasses',\n  'Goblin',\n  'Gold',\n  'Goodbye',\n  'Grandpa',\n  'Grape',\n  'Grass',\n  'Gratitude',\n  'Gray',\n  'Green',\n  'Guitar',\n  'Gum',\n  'Gumball',\n  'Hair',\n  'Half',\n  'Handle',\n  'Handwriting',\n  'Hang',\n  'Happy',\n  'Hat',\n  'Hatch',\n  'Headache',\n  'Heart',\n  'Hedge',\n  'Helicopter',\n  'Hem',\n  'Hide',\n  'Hill',\n  'Hockey',\n  'Homework',\n  'Honk',\n  'Hopscotch',\n  'Horse',\n  'Hose',\n  'Hot',\n  'House',\n  'Houseboat',\n  'Hug',\n  'Humidifier',\n  'Hungry',\n  'Hurdle',\n  'Hurt',\n  'Hut',\n  'Ice',\n  'Implode',\n  'Inn',\n  'Inquisition',\n  'Intern',\n  'Internet',\n  'Invitation',\n  'Ironic',\n  'Ivory',\n  'Ivy',\n  'Jade',\n  'Jeans',\n  'Jelly',\n  'Jet',\n  'Jig',\n  'Jog',\n  'Journal',\n  'Jump',\n  'Key',\n  'Killer',\n  'Kilogram',\n  'King',\n  'Kitchen',\n  'Kite',\n  'Knee',\n  'Kneel',\n  'Knife',\n  'Knight',\n  'Koala',\n  'Lace',\n  'Ladder',\n  'Ladybug',\n  'Lag',\n  'Landfill',\n  'Lap',\n  'Laugh',\n  'Laundry',\n  'Law',\n  'Lawn',\n  'Lawnmower',\n  'Leak',\n  'Leg',\n  'Letter',\n  'Level',\n  'Lifestyle',\n  'Ligament',\n  'Light',\n  'Lightsaber',\n  'Lime',\n  'Lion',\n  'Lizard',\n  'Log',\n  'Loiterer',\n  'Lollipop',\n  'Loveseat',\n  'Loyalty',\n  'Lunch',\n  'Lunchbox',\n  'Lyrics',\n  'Machine',\n  'Macho',\n  'Mailbox',\n  'Mammoth',\n  'Mark',\n  'Mascot',\n  'Mast',\n  'Matchstick',\n  'Mate',\n  'Mattress',\n  'Mess',\n  'Midsummer',\n  'Mine',\n  'Mistake',\n  'Modern',\n  'Mold',\n  'Mom',\n  'Monday',\n  'Money',\n  'Monitor',\n  'Monster',\n  'Mooch',\n  'Moon',\n  'Mop',\n  'Moth',\n  'Motorcycle',\n  'Mountain',\n  'Mouse',\n  'Mower',\n  'Mud',\n  'Music',\n  'Mute',\n  'Nature',\n  'Negotiate',\n  'Neighbor',\n  'Nest',\n  'Neutron',\n  'Niece',\n  'Night',\n  'Nightmare',\n  'Nose',\n  'Oar',\n  'Observatory',\n  'Office',\n  'Oil',\n  'Old',\n  'Olympian',\n  'Opaque',\n  'Opener',\n  'Orbit',\n  'Organ',\n  'Organize',\n  'Outer',\n  'Outside',\n  'Ovation',\n  'Overture',\n  'Pail',\n  'Paint',\n  'Pajamas',\n  'Palace',\n  'Pants',\n  'Paper',\n  'Paper',\n  'Park',\n  'Parody',\n  'Party',\n  'Password',\n  'Pastry',\n  'Pawn',\n  'Pear',\n  'Pen',\n  'Pencil',\n  'Pendulum',\n  'Penis',\n  'Penny',\n  'Pepper',\n  'Personal',\n  'Philosopher',\n  'Phone',\n  'Photograph',\n  'Piano',\n  'Picnic',\n  'Pigpen',\n  'Pillow',\n  'Pilot',\n  'Pinch',\n  'Ping',\n  'Pinwheel',\n  'Pirate',\n  'Plaid',\n  'Plan',\n  'Plank',\n  'Plate',\n  'Platypus',\n  'Playground',\n  'Plow',\n  'Plumber',\n  'Pocket',\n  'Poem',\n  'Point',\n  'Pole',\n  'Pomp',\n  'Pong',\n  'Pool',\n  'Popsicle',\n  'Population',\n  'Portfolio',\n  'Positive',\n  'Post',\n  'Princess',\n  'Procrastinate',\n  'Protestant',\n  'Psychologist',\n  'Publisher',\n  'Punk',\n  'Puppet',\n  'Puppy',\n  'Push',\n  'Puzzle',\n  'Quarantine',\n  'Queen',\n  'Quicksand',\n  'Quiet',\n  'Race',\n  'Radio',\n  'Raft',\n  'Rag',\n  'Rainbow',\n  'Rainwater',\n  'Random',\n  'Ray',\n  'Recycle',\n  'Red',\n  'Regret',\n  'Reimbursement',\n  'Retaliate',\n  'Rib',\n  'Riddle',\n  'Rim',\n  'Rink',\n  'Roller',\n  'Room',\n  'Rose',\n  'Round',\n  'Roundabout',\n  'Rung',\n  'Runt',\n  'Rut',\n  'Sad',\n  'Safe',\n  'Salmon',\n  'Salt',\n  'Sandbox',\n  'Sandcastle',\n  'Sandwich',\n  'Sash',\n  'Satellite',\n  'Scar',\n  'Scared',\n  'School',\n  'Scoundrel',\n  'Scramble',\n  'Scuff',\n  'Seashell',\n  'Season',\n  'Sentence',\n  'Sequins',\n  'Set',\n  'Shaft',\n  'Shallow',\n  'Shampoo',\n  'Shark',\n  'Sheep',\n  'Sheets',\n  'Sheriff',\n  'Shipwreck',\n  'Shirt',\n  'Shoelace',\n  'Short',\n  'Shower',\n  'Shrink',\n  'Sick',\n  'Siesta',\n  'Silhouette',\n  'Singer',\n  'Sip',\n  'Skate',\n  'Skating',\n  'Ski',\n  'Slam',\n  'Sleep',\n  'Sling',\n  'Slow',\n  'Slump',\n  'Smith',\n  'Sneeze',\n  'Snow',\n  'Snuggle',\n  'Song',\n  'Space',\n  'Spare',\n  'Speakers',\n  'Spider',\n  'Spit',\n  'Sponge',\n  'Spool',\n  'Spoon',\n  'Spring',\n  'Sprinkler',\n  'Spy',\n  'Square',\n  'Squint',\n  'Stairs',\n  'Standing',\n  'Star',\n  'State',\n  'Stick',\n  'Stockholder',\n  'Stoplight',\n  'Stout',\n  'Stove',\n  'Stowaway',\n  'Straw',\n  'Stream',\n  'Streamline',\n  'Stripe',\n  'Student',\n  'Sun',\n  'Sunburn',\n  'Sushi',\n  'Swamp',\n  'Swarm',\n  'Sweater',\n  'Swimming',\n  'Swing',\n  'Tachometer',\n  'Talk',\n  'Taxi',\n  'Teacher',\n  'Teapot',\n  'Teenager',\n  'Telephone',\n  'Ten',\n  'Tennis',\n  'Thief',\n  'Think',\n  'Throne',\n  'Through',\n  'Thunder',\n  'Tide',\n  'Tiger',\n  'Time',\n  'Tinting',\n  'Tiptoe',\n  'Tiptop',\n  'Tired',\n  'Tissue',\n  'Toast',\n  'Toilet',\n  'Tool',\n  'Toothbrush',\n  'Tornado',\n  'Tournament',\n  'Tractor',\n  'Train',\n  'Trash',\n  'Treasure',\n  'Tree',\n  'Triangle',\n  'Trip',\n  'Truck',\n  'Tub',\n  'Tuba',\n  'Tutor',\n  'Television',\n  'Twang',\n  'Twig',\n  'Twitterpated',\n  'Type',\n  'Unemployed',\n  'Upgrade',\n  'Vest',\n  'Vision',\n  'Wag',\n  'Water',\n  'Watermelon',\n  'Wax',\n  'Wedding',\n  'Weed',\n  'Welder',\n  'Whatever',\n  'Wheelchair',\n  'Whiplash',\n  'Whisk',\n  'Whistle',\n  'White',\n  'Wig',\n  'Will',\n  'Windmill',\n  'Winter',\n  'Wish',\n  'Wolf',\n  'Wool',\n  'World',\n  'Worm',\n  'Wristwatch',\n  'Yardstick',\n  'Zamboni',\n  'Zen',\n  'Zero',\n  'Zipper',\n  'Zone',\n  'Zoo'\n];\n","import words from './words';\n\nconst getRandomInt = (max) => Math.floor(Math.random() * Math.floor(max));\n\nconst contains = (val, values) => {\n  for (let i = 0; i < values.length; i++) {\n    if (val === values[i]) {\n      return true;\n    }\n  }\n  return false;\n}\n\nconst getUnselectedRandom = (selection, max) => {\n  const i = getRandomInt(max);\n  if (contains(i, selection)) {\n    return getUnselectedRandom(selection, max);\n  }\n  return i;\n}\n\nconst shuffleTiles = () => {\n  const tiles = [];\n  const assassinId = getRandomInt(25); // ass placed differently because it would almost always be on the 1st row otherwise\n  const toDistribute = {\n    values: ['teamA', 'teamB', 'neutral'], // these guys have similar enough odds that this strategy makes sense\n    'teamA': 9,\n    'teamB': 8,\n    'neutral': 7\n  };\n  for (let i = 0; i < 25; i++) {\n    const wordIndex = getUnselectedRandom(tiles.map(tile => tile.id), words.length);\n    const tileValue = i === assassinId\n      ? 'assassin'\n      : toDistribute.values[getRandomInt(toDistribute.values.length)];\n    if (toDistribute[tileValue] > 0) {\n      toDistribute[tileValue]--;\n    }\n    if (toDistribute[tileValue] === 0) {\n      toDistribute.values = toDistribute.values.filter(val => val !== tileValue);\n    }\n    tiles.push({ id: wordIndex , word: words[wordIndex], value: tileValue });\n  }\n  return tiles.map(tile => ({ word: tile.word, value: tile.value, color: 'unflipped' }));\n};\n\n\nconst reset = () => ({\n  tiles: shuffleTiles(),\n  teamAscore: 0,\n  teamBscore: 0,\n  spy: false\n});\nexport const initialState = reset();\n\nexport default (state, action) => {\n  switch (action.type) {\n    case 'flip':\n      const flippedTile = { ...state.tiles[action.id] };\n      flippedTile.color = flippedTile.value;\n      let newState = {\n        ...state,\n        tiles: state.tiles.slice(0, action.id),\n      };\n      newState.tiles.push(flippedTile);\n      newState.tiles = newState.tiles.concat(state.tiles.slice(action.id + 1));\n      if (flippedTile.color === 'teamA') {\n        newState.teamAscore = state.teamAscore + 1;\n      }\n      if (flippedTile.color === 'teamB') {\n        newState.teamBscore = state.teamBscore + 1;\n      }\n      if (flippedTile.color === 'assassin') {\n        newState.tiles = state.tiles.map(tile => ({ ...tile, color: tile.value }));\n      }\n      return newState;\n    case 'reset':\n      return reset();\n    case 'toggleSpy':\n      return { ...state, spy: !state.spy };\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from 'react';\nimport reducer, { initialState } from './reducer';\nimport './App.css';\n\nconst scoreToWin = {\n  teamA: 9,\n  teamB: 8\n}\n\nconst Tile = ({ id, color, word, handleClick, value, spy }) => {\n  const flipped = color === value;\n  const spyClass = flipped ? 'spy' : value;\n  return (\n    <div\n      className={`tile ${color} ${spy ? spyClass : ''}`}\n      onClick={() => handleClick(id)}\n    >\n      {word}\n    </div>\n  );\n};\n\nconst Row = ({ rowI, columns, handleClick, spy }) => {\n  const tiles = columns.map((tile, i) =>\n    <Tile\n      key={i}\n      id={rowI + i}\n      color={tile.color}\n      word={tile.word}\n      handleClick={handleClick}\n      value={tile.value}\n      spy={spy}\n    />\n  );\n  return <div className=\"row\">{tiles}</div>;\n};\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { tiles } = state;\n  const handleClick = id => {\n    const flippedTile = tiles[id];\n    if (flippedTile.color !== flippedTile.value) {\n      dispatch({ type: 'flip', id });\n    }\n  };\n  const rowsCountAndLength = Math.sqrt(tiles.length);\n  if (rowsCountAndLength !== Math.round(rowsCountAndLength)) {\n    throw new Error('Invalid number of tiles');\n  }\n  const rows = [];\n  for (let i = 0; i < tiles.length; i += rowsCountAndLength) {\n    const rowData = tiles.slice(i, i + rowsCountAndLength);\n    rows.push(<Row key={i} rowI={i} columns={rowData} handleClick={handleClick} spy={state.spy} />);\n  }\n  let winningTeam = '';\n  if (state.teamAscore === scoreToWin.teamA) {\n    winningTeam = 'teamA';\n  }\n  if (state.teamBscore === scoreToWin.teamB) {\n    winningTeam = 'teamB';\n  }\n  return (\n    <>\n      <div>teamA: {state.teamAscore}/{scoreToWin.teamA} | teamB: {state.teamBscore}/{scoreToWin.teamB}</div>\n      <button onClick={() => dispatch({ type: 'reset' })}>Reset</button>\n      <button\n        onMouseDown={() => dispatch({ type: 'toggleSpy' })}\n        onMouseUp={() => dispatch({ type: 'toggleSpy' })}\n      >\n        Spy Master check\n      </button>\n      {winningTeam && <div>{winningTeam} TEAM WINS!!!</div>}\n      <div className=\"board\">{rows}</div>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}